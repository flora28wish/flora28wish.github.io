{"meta":{"title":"築夢踏實","subtitle":"","description":"","author":"若憐","url":"http://flora28wish.github.io","root":"/"},"pages":[{"title":"關於本站","date":"2019-12-30T16:02:00.000Z","updated":"2019-12-30T16:02:00.000Z","comments":true,"path":"about/index.html","permalink":"http://flora28wish.github.io/about/index.html","excerpt":"","text":"若憐 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 看似精明實則迷糊的小小工程師編織夢想的點點滴滴"},{"title":"所有分類","date":"2019-12-24T14:39:24.000Z","updated":"2019-12-24T14:39:24.000Z","comments":true,"path":"categories/index.html","permalink":"http://flora28wish.github.io/categories/index.html","excerpt":"","text":""},{"title":"所有標籤","date":"2019-12-24T14:39:23.000Z","updated":"2019-12-24T14:39:23.000Z","comments":true,"path":"tags/index.html","permalink":"http://flora28wish.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"PHP 方法多載 1","slug":"PHP 方法多載 1","date":"2020-04-18T00:00:00.000Z","updated":"2020-04-18T16:31:33.000Z","comments":true,"path":"2020/04/18/PHP 方法多載 1/","link":"","permalink":"http://flora28wish.github.io/2020/04/18/PHP%20%E6%96%B9%E6%B3%95%E5%A4%9A%E8%BC%89%201/","excerpt":"","text":"我是又小又菜的 PHP 工程師，目前的工作主要都是使用 Laravel 框架進行開發，其中經常使用到 andersao/l5-repository 套件，一直以來都是乖乖的按照文件上面提供的方法使用，忽然心血來潮的看了看源代碼。誒！怎麼錯過了這麼好用的方法呢～趕快來筆記一下💕 多載 OverloadingPHP 多載意指動態創建屬性或方法。透過魔術方法來實現。 參考 Overloading in PHP provides means to dynamically \"create\" properties and methods. These dynamic entities are processed via magic methods. 與 Java 多載的概念不同，這點需要特別注意！ PHP's overloading features are different from Java's. 方法多載 Method Overloading方法多載有 __call() 和 __callStatic() 這兩種魔法方法。 參考 Overloading methods via the __call() and __callStatic() magic methods. __call1public __call(string $name, array $arguments): mixed $name → 要呼叫的方法名稱 The $name argument is the name of the method being called. $arguments → 傳給 $name 方法的枚舉陣列 The $arguments argument is an enumerated array containing the parameters passed to the $name's method. 若呼叫物件某個方法，但這個方法未被定義時，就會觸發 __call()。 __call is triggered when invoking inaccessible methods in an object context. 接著來看看下方的範例加強理解： Example: 123456789101112131415161718192021class Test&#123; public function __call($methodName, $arguments) &#123; return $methodName . &#39; method not exist&#39;; &#125; public function test1($word) &#123; return &#39;test1 method result is &#39; . $word; &#125;&#125;$word &#x3D; &#39;Word&#39;;$test &#x3D; new Test();$show1 &#x3D; $test-&gt;test1($word);$show2 &#x3D; $test-&gt;test2($word);echo $show1;echo &#39;&lt;br&gt;&#39;;echo $show2 ;echo &#39;&lt;br&gt;&#39;; 結果顯示如下： Result: 12test1 method result is Wordtest2 method not exist 宣告一個類別為 Test 的物件，呼叫方法 test1() 和 test2()。Test 類別中有定義 test1() 這個方法，而未定義 test2()，所以當呼叫 test2() 時，就會觸發 __call()。 __callStatic1public __callStatic(string $name, array $arguments): mixed $name → 要呼叫的方法名稱 The $name argument is the name of the method being called. $arguments → 傳給 $name 方法的枚舉陣列 The $arguments argument is an enumerated array containing the parameters passed to the $name's method. 若呼叫物件某個靜態方法，但這個靜態方法未被定義時，就會觸發 __callStatic()。 __callStatic() is triggered when invoking inaccessible methods in a static context. PHP 5.3.0 之後版本才有此方法。 Version 5.3.0 → Added __callStatic(). 接著來看看下方的範例加強理解： Example: 1234567891011121314151617181920class Test&#123; public static function __callStatic($methodName, $arguments) &#123; return $methodName . &#39; method not exist&#39;; &#125; public static function test1($word) &#123; return &#39;test1 method result is &#39; . $word; &#125;&#125;$word &#x3D; &#39;Word&#39;;$show1 &#x3D; Test::test1($word);$show2 &#x3D; Test::test2($word);echo $show1;echo &#39;&lt;br&gt;&#39;;echo $show2 ;echo &#39;&lt;br&gt;&#39;; 結果顯示如下： Result: 12test1 method result is Wordtest2 method not exist 呼叫 Test 類別中的 test1() 和 test2() 靜態方法。Test 類別中有定義 test1() 這個靜態方法，而未定義 test2()，所以當呼叫 test2() 時，就會觸發 __callStatic()。","categories":[{"name":"筆記","slug":"筆記","permalink":"http://flora28wish.github.io/categories/%E7%AD%86%E8%A8%98/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://flora28wish.github.io/tags/PHP/"}]},{"title":"喵","slug":"喵","date":"2019-12-30T00:00:00.000Z","updated":"2019-12-31T16:07:45.000Z","comments":true,"path":"2019/12/30/喵/","link":"","permalink":"http://flora28wish.github.io/2019/12/30/%E5%96%B5/","excerpt":"","text":"大家好，我是若憐。夢想是製作出屬於自己的虛擬實境遊戲世界！ 反省並期望為了未來回顧時能夠不後悔！我決心要好好逼迫一下自己並給予壓力，於是開始撰寫文章記錄成長的點點滴滴～ 目前的職業是後端開發工程師，會一點兒菜鳥級別的前端技術。但一直以來都很不喜歡作筆記，常常浪費時間在相同的問題上，接下來會把心得與做法都寫下，壓榨出能用之時間以持續進修，我想這樣距離夢想也就更近了… 文章大部分皆以程式為主，會努力增加遊戲相關文章！ 講到了遊戲世界，要建立劇情觀點，自然需要故事囉～所以也會分享些我天馬行空想出來的故事，歡迎各位提供意見與交流！","categories":[{"name":"談心","slug":"談心","permalink":"http://flora28wish.github.io/categories/%E8%AB%87%E5%BF%83/"}],"tags":[]}]}